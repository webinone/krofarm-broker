// Code generated by protoc-gen-go.
// source: DevicePayload.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DevicePayload struct {
	CreatedAt        *int64                    `protobuf:"varint,1,opt,name=createdAt" json:"createdAt,omitempty"`
	DvcInfo          []*DeviceInfo             `protobuf:"bytes,5000,rep,name=dvcInfo" json:"dvcInfo,omitempty"`
	ReqId            *int64                    `protobuf:"varint,5001,opt,name=reqId" json:"reqId,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *DevicePayload) Reset()                    { *m = DevicePayload{} }
func (m *DevicePayload) String() string            { return proto.CompactTextString(m) }
func (*DevicePayload) ProtoMessage()               {}
func (*DevicePayload) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

var extRange_DevicePayload = []proto.ExtensionRange{
	{2, 4999},
}

func (*DevicePayload) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_DevicePayload
}
func (m *DevicePayload) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *DevicePayload) GetCreatedAt() int64 {
	if m != nil && m.CreatedAt != nil {
		return *m.CreatedAt
	}
	return 0
}

func (m *DevicePayload) GetDvcInfo() []*DeviceInfo {
	if m != nil {
		return m.DvcInfo
	}
	return nil
}

func (m *DevicePayload) GetReqId() int64 {
	if m != nil && m.ReqId != nil {
		return *m.ReqId
	}
	return 0
}

type DeviceInfo struct {
	DvcId            *int64                    `protobuf:"varint,1,req,name=dvcId" json:"dvcId,omitempty"`
	ParentDvcId      *int64                    `protobuf:"varint,2,opt,name=parentDvcId" json:"parentDvcId,omitempty"`
	ProflTyCd        *int32                    `protobuf:"varint,3,opt,name=proflTyCd" json:"proflTyCd,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *DeviceInfo) Reset()                    { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string            { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()               {}
func (*DeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

var extRange_DeviceInfo = []proto.ExtensionRange{
	{4, 999},
}

func (*DeviceInfo) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_DeviceInfo
}
func (m *DeviceInfo) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *DeviceInfo) GetDvcId() int64 {
	if m != nil && m.DvcId != nil {
		return *m.DvcId
	}
	return 0
}

func (m *DeviceInfo) GetParentDvcId() int64 {
	if m != nil && m.ParentDvcId != nil {
		return *m.ParentDvcId
	}
	return 0
}

func (m *DeviceInfo) GetProflTyCd() int32 {
	if m != nil && m.ProflTyCd != nil {
		return *m.ProflTyCd
	}
	return 0
}

func init() {
	proto.RegisterType((*DevicePayload)(nil), "DevicePayload")
	proto.RegisterType((*DeviceInfo)(nil), "DeviceInfo")
}

var fileDescriptor2 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x76, 0x49, 0x2d, 0xcb,
	0x4c, 0x4e, 0x0d, 0x48, 0xac, 0xcc, 0xc9, 0x4f, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57,
	0x2a, 0xe6, 0xe2, 0x45, 0x11, 0x16, 0x92, 0xe1, 0xe2, 0x4c, 0x2e, 0x4a, 0x4d, 0x2c, 0x49, 0x4d,
	0x71, 0x2c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x42, 0x08, 0x08, 0xa9, 0x71, 0xb1, 0xa7,
	0x94, 0x25, 0x7b, 0xe6, 0xa5, 0xe5, 0x4b, 0x74, 0xa8, 0x2b, 0x30, 0x6b, 0x70, 0x1b, 0x71, 0xeb,
	0x41, 0xf4, 0x83, 0xc4, 0x82, 0x60, 0x92, 0x42, 0xa2, 0x5c, 0xac, 0x45, 0xa9, 0x85, 0x9e, 0x29,
	0x12, 0x9d, 0xea, 0x60, 0x23, 0x20, 0x3c, 0x2d, 0x56, 0x0e, 0x26, 0x81, 0x0e, 0x75, 0xa5, 0x4c,
	0x2e, 0x2e, 0x84, 0x26, 0x21, 0x11, 0x2e, 0x56, 0x90, 0xb6, 0x14, 0xa0, 0x6d, 0x4c, 0x20, 0xa5,
	0x60, 0x8e, 0x90, 0x02, 0x17, 0x77, 0x41, 0x62, 0x51, 0x6a, 0x5e, 0x89, 0x0b, 0x58, 0x8e, 0x09,
	0x6c, 0x0c, 0xb2, 0x10, 0xc8, 0xa5, 0x40, 0x3f, 0xa4, 0xe5, 0x84, 0x54, 0x3a, 0xa7, 0x48, 0x30,
	0x03, 0xe5, 0x59, 0x83, 0x10, 0x02, 0x40, 0xab, 0x58, 0x04, 0x5e, 0xb0, 0x3b, 0x71, 0x45, 0x71,
	0x80, 0x3d, 0x9a, 0x54, 0x9a, 0x06, 0x08, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x74, 0x99, 0x9e, 0x01,
	0x01, 0x00, 0x00,
}
