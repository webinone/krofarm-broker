// Code generated by protoc-gen-go.
// source: StatusPayload.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type StatusPayload struct {
	CreatedAt        *int64                    `protobuf:"varint,1,opt,name=createdAt" json:"createdAt,omitempty"`
	StatDevice       []*StatDevice             `protobuf:"bytes,101,rep,name=statDevice" json:"statDevice,omitempty"`
	ReqId            *int64                    `protobuf:"varint,102,opt,name=reqId" json:"reqId,omitempty"`
	ReqTy            *int32                    `protobuf:"varint,103,opt,name=reqTy,def=0" json:"reqTy,omitempty"`
	SubDvcStatChg    *int32                    `protobuf:"varint,104,opt,name=subDvcStatChg" json:"subDvcStatChg,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *StatusPayload) Reset()                    { *m = StatusPayload{} }
func (m *StatusPayload) String() string            { return proto.CompactTextString(m) }
func (*StatusPayload) ProtoMessage()               {}
func (*StatusPayload) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

var extRange_StatusPayload = []proto.ExtensionRange{
	{2, 100},
}

func (*StatusPayload) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_StatusPayload
}
func (m *StatusPayload) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

const Default_StatusPayload_ReqTy int32 = 0

func (m *StatusPayload) GetCreatedAt() int64 {
	if m != nil && m.CreatedAt != nil {
		return *m.CreatedAt
	}
	return 0
}

func (m *StatusPayload) GetStatDevice() []*StatDevice {
	if m != nil {
		return m.StatDevice
	}
	return nil
}

func (m *StatusPayload) GetReqId() int64 {
	if m != nil && m.ReqId != nil {
		return *m.ReqId
	}
	return 0
}

func (m *StatusPayload) GetReqTy() int32 {
	if m != nil && m.ReqTy != nil {
		return *m.ReqTy
	}
	return Default_StatusPayload_ReqTy
}

func (m *StatusPayload) GetSubDvcStatChg() int32 {
	if m != nil && m.SubDvcStatChg != nil {
		return *m.SubDvcStatChg
	}
	return 0
}

type StatDevice struct {
	DvcId            *int64                    `protobuf:"varint,1,opt,name=dvcId" json:"dvcId,omitempty"`
	CommStatCd       *int32                    `protobuf:"varint,2,opt,name=commStatCd" json:"commStatCd,omitempty"`
	CommStatMssage   *string                   `protobuf:"bytes,3,opt,name=commStatMssage" json:"commStatMssage,omitempty"`
	FnctngStatCd     *int32                    `protobuf:"varint,4,opt,name=fnctngStatCd" json:"fnctngStatCd,omitempty"`
	FnctngStatMssage *string                   `protobuf:"bytes,5,opt,name=fnctngStatMssage" json:"fnctngStatMssage,omitempty"`
	CntrlStat        *int32                    `protobuf:"varint,6,opt,name=cntrlStat" json:"cntrlStat,omitempty"`
	DlgatStat        *int32                    `protobuf:"varint,7,opt,name=dlgatStat" json:"dlgatStat,omitempty"`
	IoPoint          []*IOPoint                `protobuf:"bytes,101,rep,name=ioPoint" json:"ioPoint,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *StatDevice) Reset()                    { *m = StatDevice{} }
func (m *StatDevice) String() string            { return proto.CompactTextString(m) }
func (*StatDevice) ProtoMessage()               {}
func (*StatDevice) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

var extRange_StatDevice = []proto.ExtensionRange{
	{8, 100},
}

func (*StatDevice) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_StatDevice
}
func (m *StatDevice) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

func (m *StatDevice) GetDvcId() int64 {
	if m != nil && m.DvcId != nil {
		return *m.DvcId
	}
	return 0
}

func (m *StatDevice) GetCommStatCd() int32 {
	if m != nil && m.CommStatCd != nil {
		return *m.CommStatCd
	}
	return 0
}

func (m *StatDevice) GetCommStatMssage() string {
	if m != nil && m.CommStatMssage != nil {
		return *m.CommStatMssage
	}
	return ""
}

func (m *StatDevice) GetFnctngStatCd() int32 {
	if m != nil && m.FnctngStatCd != nil {
		return *m.FnctngStatCd
	}
	return 0
}

func (m *StatDevice) GetFnctngStatMssage() string {
	if m != nil && m.FnctngStatMssage != nil {
		return *m.FnctngStatMssage
	}
	return ""
}

func (m *StatDevice) GetCntrlStat() int32 {
	if m != nil && m.CntrlStat != nil {
		return *m.CntrlStat
	}
	return 0
}

func (m *StatDevice) GetDlgatStat() int32 {
	if m != nil && m.DlgatStat != nil {
		return *m.DlgatStat
	}
	return 0
}

func (m *StatDevice) GetIoPoint() []*IOPoint {
	if m != nil {
		return m.IoPoint
	}
	return nil
}

type IOPoint struct {
	IoPointId        *int32  `protobuf:"varint,1,req,name=ioPointId" json:"ioPointId,omitempty"`
	FnctngStatCd     *int32  `protobuf:"varint,2,req,name=fnctngStatCd" json:"fnctngStatCd,omitempty"`
	FnctngStatMssage *string `protobuf:"bytes,3,opt,name=fnctngStatMssage" json:"fnctngStatMssage,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IOPoint) Reset()                    { *m = IOPoint{} }
func (m *IOPoint) String() string            { return proto.CompactTextString(m) }
func (*IOPoint) ProtoMessage()               {}
func (*IOPoint) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *IOPoint) GetIoPointId() int32 {
	if m != nil && m.IoPointId != nil {
		return *m.IoPointId
	}
	return 0
}

func (m *IOPoint) GetFnctngStatCd() int32 {
	if m != nil && m.FnctngStatCd != nil {
		return *m.FnctngStatCd
	}
	return 0
}

func (m *IOPoint) GetFnctngStatMssage() string {
	if m != nil && m.FnctngStatMssage != nil {
		return *m.FnctngStatMssage
	}
	return ""
}

func init() {
	proto.RegisterType((*StatusPayload)(nil), "StatusPayload")
	proto.RegisterType((*StatDevice)(nil), "StatDevice")
	proto.RegisterType((*IOPoint)(nil), "IOPoint")
}

var fileDescriptor3 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0x41, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0xb3, 0x0d, 0x64, 0x3c, 0xc4, 0x90, 0x6a, 0x62, 0x0f, 0xc6, 0x10, 0x62, 0x0c, 0xc1,
	0x84, 0x18, 0x8f, 0xde, 0x54, 0x2e, 0x1c, 0x8c, 0xa4, 0x78, 0xf2, 0x56, 0xda, 0x32, 0x48, 0x60,
	0xd5, 0xad, 0x60, 0xf8, 0x36, 0x7e, 0x09, 0xbf, 0x9f, 0xed, 0xdb, 0x60, 0x4c, 0x4c, 0x3c, 0xfe,
	0x7f, 0xff, 0xb7, 0x5f, 0xdb, 0x97, 0xc1, 0xe9, 0xd8, 0x70, 0xb3, 0x4a, 0x47, 0x7c, 0xb3, 0xd0,
	0x5c, 0xf6, 0xdf, 0x13, 0x6d, 0x74, 0xe7, 0xdb, 0x83, 0x66, 0x89, 0x93, 0x0b, 0xa8, 0x8b, 0x44,
	0x71, 0xa3, 0xe4, 0x83, 0xa1, 0x5e, 0xdb, 0xeb, 0x06, 0xac, 0x00, 0xe4, 0x06, 0x20, 0xb5, 0xe3,
	0x03, 0xb5, 0x9e, 0x0b, 0x45, 0x55, 0x3b, 0xe8, 0x36, 0xee, 0x1a, 0xfd, 0xf1, 0x0e, 0xb1, 0xbd,
	0x9a, 0x9c, 0x41, 0x35, 0x51, 0x1f, 0x43, 0x49, 0xa7, 0xa8, 0xc9, 0x02, 0x39, 0x47, 0xfa, 0xba,
	0xa1, 0x91, 0xa5, 0xd5, 0x7b, 0xef, 0x96, 0x65, 0x99, 0x5c, 0x41, 0x33, 0x5d, 0x4d, 0x06, 0x6b,
	0xe1, 0x74, 0x4f, 0xb3, 0x88, 0xce, 0xdc, 0x00, 0x2b, 0xc3, 0x5e, 0x25, 0xf4, 0x5b, 0xaa, 0xf3,
	0xe5, 0x03, 0x8c, 0x4b, 0x27, 0xc9, 0xb5, 0xb0, 0x27, 0x65, 0x17, 0xce, 0x02, 0xb9, 0x04, 0x10,
	0x7a, 0xb9, 0xc4, 0x2f, 0x25, 0xf5, 0xd1, 0xb6, 0x47, 0xc8, 0x35, 0x9c, 0x6c, 0xd3, 0x73, 0x9a,
	0xf2, 0x48, 0xd1, 0xc0, 0xce, 0xd4, 0xd9, 0x2f, 0x4a, 0x3a, 0x70, 0x3c, 0x8d, 0x85, 0x89, 0xa3,
	0xdc, 0x54, 0x41, 0x53, 0x89, 0x91, 0x1e, 0xb4, 0x8a, 0x9c, 0xdb, 0xaa, 0x68, 0x3b, 0xe0, 0xb8,
	0xe2, 0xd8, 0x24, 0x0b, 0x87, 0xe8, 0x11, 0xca, 0x0a, 0xe0, 0x5a, 0xb9, 0x88, 0xb8, 0xc1, 0xb6,
	0x96, 0xb5, 0x3b, 0x60, 0xef, 0x52, 0x9b, 0xeb, 0x91, 0x9e, 0xc7, 0x26, 0xdf, 0x7e, 0xd8, 0x1f,
	0xbe, 0x60, 0x66, 0xdb, 0xc2, 0xae, 0x28, 0xb4, 0x2b, 0xfa, 0x84, 0x5a, 0xde, 0x38, 0x65, 0xde,
	0xe1, 0x8a, 0x7c, 0xa7, 0xdc, 0x81, 0x83, 0xe7, 0xf9, 0x38, 0xf0, 0xff, 0xf3, 0x82, 0xbf, 0x9f,
	0xf7, 0x08, 0x6f, 0x21, 0xfe, 0x5c, 0x93, 0xd5, 0xf4, 0x27, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x99,
	0x38, 0xcf, 0x75, 0x02, 0x00, 0x00,
}
